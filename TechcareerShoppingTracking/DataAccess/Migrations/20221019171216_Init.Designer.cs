// <auto-generated />
using System;
using DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20221019171216_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Teknoloji"
                        },
                        new
                        {
                            Id = 2,
                            Name = "İçecek"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Atıştırmalık"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kahvaltılık"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Temizlik"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("PictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PictureURL");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop A",
                            PictureURL = "https://picsum.photos/id/1/200/300"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Geniş Ekran",
                            PictureURL = "https://picsum.photos/id/2/200/300"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Bilgisayar Kasası",
                            PictureURL = "https://picsum.photos/id/3/200/300"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Kamera A",
                            PictureURL = "https://picsum.photos/id/4/200/300"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Yazıcı",
                            PictureURL = "https://picsum.photos/id/5/200/300"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Webcam",
                            PictureURL = "https://picsum.photos/id/6/200/300"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "Akıllı Saat A",
                            PictureURL = "https://picsum.photos/id/7/200/300"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Name = "Telefon A350",
                            PictureURL = "https://picsum.photos/id/8/200/300"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Name = "Yeşil Çay",
                            PictureURL = "https://picsum.photos/id/9/200/300"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Name = "Siyah Çay",
                            PictureURL = "https://picsum.photos/id/10/200/300"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Name = "Süt",
                            PictureURL = "https://picsum.photos/id/11/200/300"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Name = "Kahve",
                            PictureURL = "https://picsum.photos/id/12/200/300"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Name = "Soda",
                            PictureURL = "https://picsum.photos/id/13/200/300"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Name = "Karpuzlu Soda",
                            PictureURL = "https://picsum.photos/id/14/200/300"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            Name = "Goflet",
                            PictureURL = "https://picsum.photos/id/15/200/300"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            Name = "Beyaz Çikolata",
                            PictureURL = "https://picsum.photos/id/16/200/300"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Name = "Çekirdek",
                            PictureURL = "https://picsum.photos/id/429/17/300"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Name = "Leblebi",
                            PictureURL = "https://picsum.photos/id/429/18/300"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Name = "Cips",
                            PictureURL = "https://picsum.photos/id/429/19/300"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Name = "Zeytin",
                            PictureURL = "https://picsum.photos/id/20/200/300"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            Name = "Peynir",
                            PictureURL = "https://picsum.photos/id/21/200/300"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            Name = "Bal",
                            PictureURL = "https://picsum.photos/id/22/200/300"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Name = "Tahin",
                            PictureURL = "https://picsum.photos/id/23/200/300"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            Name = "Pekmez",
                            PictureURL = "https://picsum.photos/id/24/200/300"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 4,
                            Name = "Ekmek",
                            PictureURL = "https://picsum.photos/id/25/200/300"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            Name = "Tuz Ruhu",
                            PictureURL = "https://picsum.photos/id/26/200/300"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 5,
                            Name = "Deterjan",
                            PictureURL = "https://picsum.photos/id/27/200/300"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 5,
                            Name = "Cam Sil",
                            PictureURL = "https://picsum.photos/id/28/200/300"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 5,
                            Name = "Yüzey Temizleyici",
                            PictureURL = "https://picsum.photos/id/29/200/300"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 5,
                            Name = "Sıvı Sabun",
                            PictureURL = "https://picsum.photos/id/30/200/300"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal"
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(4520))
                        .HasColumnName("CreatedDate");

                    b.Property<bool>("IsShopping")
                        .HasColumnType("bit")
                        .HasColumnName("IsShopping");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(7699),
                            IsShopping = false,
                            Name = "Yarın alınacaklar",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(7703),
                            IsShopping = true,
                            Name = "Pazar gecesi sineması için alınacaklar",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(7704),
                            IsShopping = true,
                            Name = "Aylık temizlik listesi",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(7705),
                            IsShopping = false,
                            Name = "Bugün benim doğum günüm",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 10, 19, 20, 12, 16, 636, DateTimeKind.Local).AddTicks(7706),
                            IsShopping = true,
                            Name = "Bir çay delisinin istekleri",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Entities.Concrete.ShoppingListDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Descripion");

                    b.Property<bool>("IsBought")
                        .HasColumnType("bit")
                        .HasColumnName("IsBought");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int")
                        .HasColumnName("ShoppingListId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "2 paket",
                            IsBought = true,
                            ProductId = 10,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "3 tane al. 2 tanesi beyaz paket, bir tanesi siyah",
                            IsBought = true,
                            ProductId = 15,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsBought = true,
                            ProductId = 22,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Diğer marketten al",
                            IsBought = true,
                            ProductId = 23,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsBought = false,
                            ProductId = 15,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 7,
                            IsBought = true,
                            ProductId = 16,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 8,
                            IsBought = true,
                            ProductId = 17,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 9,
                            IsBought = false,
                            ProductId = 18,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 10,
                            IsBought = false,
                            ProductId = 19,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsBought = true,
                            ProductId = 14,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 12,
                            IsBought = true,
                            ProductId = 10,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 13,
                            Description = "2 lt den 2 adet",
                            IsBought = false,
                            ProductId = 26,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 14,
                            Description = "KÜÇÜK PAKET DEĞİL BÜYÜK PAKETTEN OLACAK",
                            IsBought = false,
                            ProductId = 27,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 15,
                            IsBought = false,
                            ProductId = 28,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 16,
                            Description = "Bir tane yeter, mavi renkli bakkaldan alınacak",
                            IsBought = false,
                            ProductId = 29,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 17,
                            IsBought = true,
                            ProductId = 9,
                            ShoppingListId = 5
                        },
                        new
                        {
                            Id = 18,
                            IsBought = true,
                            ProductId = 10,
                            ShoppingListId = 5
                        });
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = new byte[] { 188, 70, 188, 100, 219, 117, 209, 31, 163, 26, 184, 51, 166, 147, 90, 63, 149, 47, 159, 148, 167, 205, 106, 8, 213, 93, 247, 189, 35, 59, 54, 164, 213, 203, 154, 178, 155, 103, 98, 204, 210, 15, 39, 57, 218, 224, 100, 124, 69, 52, 141, 209, 128, 172, 218, 126, 28, 48, 19, 147, 36, 64, 184, 110 },
                            PasswordSalt = new byte[] { 6, 231, 73, 25, 36, 247, 115, 123, 158, 41, 187, 193, 34, 75, 65, 52, 42, 102, 134, 96, 42, 245, 252, 3, 70, 73, 73, 0, 42, 8, 115, 196, 172, 36, 209, 130, 55, 132, 162, 229, 131, 254, 175, 96, 180, 63, 50, 81, 173, 255, 141, 204, 103, 244, 65, 89, 132, 70, 156, 152, 249, 89, 130, 116, 17, 211, 39, 176, 54, 134, 76, 201, 141, 7, 96, 185, 39, 222, 252, 211, 2, 209, 223, 158, 209, 193, 135, 157, 190, 59, 191, 178, 159, 113, 217, 109, 103, 5, 71, 221, 96, 251, 127, 40, 119, 110, 46, 203, 31, 104, 200, 72, 44, 235, 193, 68, 210, 59, 31, 152, 81, 152, 72, 89, 240, 66, 91, 157 },
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "14arslan.yusuf@gmail.com",
                            FirstName = "Yusuf",
                            LastName = "Arslan",
                            PasswordHash = new byte[] { 188, 70, 188, 100, 219, 117, 209, 31, 163, 26, 184, 51, 166, 147, 90, 63, 149, 47, 159, 148, 167, 205, 106, 8, 213, 93, 247, 189, 35, 59, 54, 164, 213, 203, 154, 178, 155, 103, 98, 204, 210, 15, 39, 57, 218, 224, 100, 124, 69, 52, 141, 209, 128, 172, 218, 126, 28, 48, 19, 147, 36, 64, 184, 110 },
                            PasswordSalt = new byte[] { 6, 231, 73, 25, 36, 247, 115, 123, 158, 41, 187, 193, 34, 75, 65, 52, 42, 102, 134, 96, 42, 245, 252, 3, 70, 73, 73, 0, 42, 8, 115, 196, 172, 36, 209, 130, 55, 132, 162, 229, 131, 254, 175, 96, 180, 63, 50, 81, 173, 255, 141, 204, 103, 244, 65, 89, 132, 70, 156, 152, 249, 89, 130, 116, 17, 211, 39, 176, 54, 134, 76, 201, 141, 7, 96, 185, 39, 222, 252, 211, 2, 209, 223, 158, 209, 193, 135, 157, 190, 59, 191, 178, 159, 113, 217, 109, 103, 5, 71, 221, 96, 251, 127, 40, 119, 110, 46, 203, 31, 104, 200, 72, 44, 235, 193, 68, 210, 59, 31, 152, 81, 152, 72, 89, 240, 66, 91, 157 },
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Email = "tech@career.com",
                            FirstName = "Tech",
                            LastName = "Career",
                            PasswordHash = new byte[] { 188, 70, 188, 100, 219, 117, 209, 31, 163, 26, 184, 51, 166, 147, 90, 63, 149, 47, 159, 148, 167, 205, 106, 8, 213, 93, 247, 189, 35, 59, 54, 164, 213, 203, 154, 178, 155, 103, 98, 204, 210, 15, 39, 57, 218, 224, 100, 124, 69, 52, 141, 209, 128, 172, 218, 126, 28, 48, 19, 147, 36, 64, 184, 110 },
                            PasswordSalt = new byte[] { 6, 231, 73, 25, 36, 247, 115, 123, 158, 41, 187, 193, 34, 75, 65, 52, 42, 102, 134, 96, 42, 245, 252, 3, 70, 73, 73, 0, 42, 8, 115, 196, 172, 36, 209, 130, 55, 132, 162, 229, 131, 254, 175, 96, 180, 63, 50, 81, 173, 255, 141, 204, 103, 244, 65, 89, 132, 70, 156, 152, 249, 89, 130, 116, 17, 211, 39, 176, 54, 134, 76, 201, 141, 7, 96, 185, 39, 222, 252, 211, 2, 209, 223, 158, 209, 193, 135, 157, 190, 59, 191, 178, 159, 113, 217, 109, 103, 5, 71, 221, 96, 251, 127, 40, 119, 110, 46, 203, 31, 104, 200, 72, 44, 235, 193, 68, 210, 59, 31, 152, 81, 152, 72, 89, 240, 66, 91, 157 },
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.HasOne("Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Entities.Concrete.ShoppingList", b =>
                {
                    b.HasOne("Entities.Concrete.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Concrete.ShoppingListDetail", b =>
                {
                    b.HasOne("Entities.Concrete.Product", "Product")
                        .WithMany("ShoppingListDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Concrete.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListDetails")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.HasOne("Entities.Concrete.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Entities.Concrete.Product", b =>
                {
                    b.Navigation("ShoppingListDetails");
                });

            modelBuilder.Entity("Entities.Concrete.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Entities.Concrete.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListDetails");
                });

            modelBuilder.Entity("Entities.Concrete.User", b =>
                {
                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
